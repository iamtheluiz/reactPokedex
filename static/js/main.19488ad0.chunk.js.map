{"version":3,"sources":["config/colors.js","assets/pokeball.jpg","assets/arrow-left.svg","assets/logo.svg","timelines/index.js","components/Menu/index.js","components/IndexItem/index.js","pages/Index/index.js","components/PokeCard/index.js","components/PokeList/index.js","pages/Pokedex/index.js","pages/Pokemon/index.js","pages/NotFound/index.js","routes.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","play","pathname","node","appears","delay","timeline","Timeline","paused","texts","querySelectorAll","from","display","autoAlpha","staggerFrom","x","ease","Power1","easeOut","getHomeTimeline","easeIn","getDefaultTimeline","exit","to","Menu","props","useState","invertValue","setInvertValue","setDisplay","useEffect","white","displayNone","id","href","style","src","ArrowLeft","alt","filter","IndexItem","className","backgroundColor","color","title","pokedexIcon","Index","name","pokedexes","setPokedexes","nextPage","setNextPage","a","fetch","response","json","data","next","prev","results","getPokedexes","map","pokedex","split","join","withRouter","console","log","length","pokeNum","setPokeNum","types","type","pokemonData","setPokemonData","num","axios","get","info","i","getPokemonInfo","colors","onClick","localStorage","setItem","JSON","stringify","history","push","key","PokeList","defaultNextPage","pokemons","setPokemons","getPokeInfo","observer","useRef","bottomRef","useCallback","current","disconnect","IntersectionObserver","entries","isIntersecting","handleLoadMore","observe","pokemon_entries","pokemon","pokemon_species","url","index","ref","Pokedex","match","api","setApi","document","querySelector","setAttribute","params","Pokemon","egg_groups","abilities","stats","setInfo","about","evolution","tabs","setTabs","species","specie","genera","genus","ability","egg","getActiveTab","tab","undefined","borderBottom","fontSize","handleTab","tabStyles","getPokemonSpecies","parse","getItem","height","weight","textTransform","stat","base_stat","App","logo","Routes","basename","render","location","TransitionGroup","component","Transition","appear","onEnter","onExit","timeout","enter","path","exact","NotFound","Boolean","window","hostname","ReactDOM","pokeballIcon","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19488ad0.chunk.js","sourcesContent":["module.exports = {\r\n  \"grass\": \"#9bcc50\",\r\n  \"poison\": \"#b97fc9\",\r\n  \"fire\": \"#fd7d24\",\r\n  \"flying\": \"#3dc7ef\",\r\n  \"water\": \"#4592c4\",\r\n  \"bug\": \"#729f3f\",\r\n  \"normal\": \"#a4acaf\",\r\n  \"electric\": \"#eed535\",\r\n  \"ground\": \"#f7de3f\",\r\n  \"fairy\": \"#fdb9e9\",\r\n  \"fighting\": \"#d56723\",\r\n  \"psychic\": \"#f366b9\",\r\n  \"steel\": \"#9eb7b8\",\r\n  \"ice\": \"#51c4e7\",\r\n  \"ghost\": \"#7b62a3\",\r\n  \"rock\": \"#a38c21\",\r\n  \"dragon\": \"#53a4cf\",\r\n  \"dark\": \"#707070\",\r\n}","module.exports = __webpack_public_path__ + \"static/media/pokeball.b674ae77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-left.713fe29d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import { TimelineMax as Timeline, Power1 } from 'gsap';\r\n\r\nconst getDefaultTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n\r\n  timeline\r\n    .from(node, 0.3, { display: 'none', autoAlpha: 0, delay, ease: Power1.easeIn })\r\n\r\n  return timeline;\r\n}\r\n\r\nconst getHomeTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  const texts = node.querySelectorAll('h1 > div');\r\n\r\n  timeline\r\n    .from(node, 0, { display: 'none', autoAlpha: 0, delay })\r\n    .staggerFrom(texts, 0.375, { autoAlpha: 0, x: -25, ease: Power1.easeOut }, 0.125);\r\n\r\n  return timeline;\r\n}\r\n\r\nexport const play = (pathname, node, appears) => {\r\n  const delay = appears ? 0 : 0.25;\r\n  let timeline\r\n\r\n  if (pathname === '/')\r\n    timeline = getHomeTimeline(node, delay);\r\n  else\r\n    timeline = getDefaultTimeline(node, delay);\r\n\r\n  timeline.play()\r\n}\r\n\r\nexport const exit = (node) => {\r\n  const timeline = new Timeline({ paused: true });\r\n\r\n  timeline.to(node, 0.15, { autoAlpha: 0, ease: Power1.easeOut });\r\n  timeline.play();\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ArrowLeft from '../../assets/arrow-left.svg';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Menu(props) {\r\n  const [ invertValue, setInvertValue ] = useState(0);\r\n  const [ display, setDisplay ] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.white ? setInvertValue(1) : setInvertValue(0);\r\n    props.displayNone ? setDisplay(\"none\") : setDisplay(\"\");\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"mainMenu\">\r\n      <Link to={props.href} style={{ display }}>\r\n        <img src={ArrowLeft} alt=\"Back\" style={{ filter: `invert(${invertValue})` }} />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nimport pokedexIcon from '../../assets/pokeball.jpg';\r\n\r\nexport default function IndexItem(props) {\r\n  return(\r\n    <Link to={props.href} className=\"IndexItem\" style={{backgroundColor: props.color}}>\r\n      <strong>{props.title}</strong>\r\n      <img src={pokedexIcon} alt=\"Pokedex Icon\"/>\r\n    </Link>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './styles.css';\r\n\r\n// Components\r\nimport MainMenu from '../../components/Menu';\r\nimport IndexItem from '../../components/IndexItem';\r\n\r\nexport default function Index() {\r\n  const [pokedexes, setPokedexes] = useState([\r\n    {\r\n      name: \"pokedex\"\r\n    }\r\n  ])\r\n  const [nextPage, setNextPage] = useState(\"https://pokeapi.co/api/v2/pokedex/\")\r\n\r\n  useEffect(() => {\r\n    if (nextPage !== null) {\r\n      getPokedexes()\r\n    }\r\n  }, [nextPage])\r\n\r\n  async function getPokedexes() {\r\n    const response = await fetch(nextPage)\r\n    const data = await response.json()\r\n\r\n    setNextPage(data.next)\r\n    setPokedexes(prev => {\r\n      return [...prev, ...data.results]\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div id=\"Index\">\r\n      <MainMenu displayNone href=\"#!\" />\r\n      <h1 className=\"title\">Pokemon!</h1>\r\n      <div id=\"items\">\r\n        {pokedexes.map(pokedex =>\r\n          <IndexItem\r\n            href={`/${pokedex.name}`}\r\n            title={`${pokedex.name.split('-').join(' ')}`}\r\n            color=\"#4bc1a7\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport colors from '../../config/colors';\r\n\r\nimport './styles.css';\r\n\r\nfunction PokeCard(props) {\r\n  console.log(props.id.split(''))\r\n  const [pokeNum, setPokeNum] = useState(props.id.split('').length);\r\n  const [pokemonData, setPokemonData] = useState({\r\n    types: [{\r\n      type: {\r\n        name: \"\"\r\n      }\r\n    }]\r\n  });\r\n\r\n  useEffect(() => {\r\n    let num = '';\r\n\r\n    for (let i = pokeNum; i < 3; i++) {\r\n      num += '0';\r\n    }\r\n\r\n    num += props.id;\r\n    setPokeNum(num);\r\n\r\n    // Get pokemon info\r\n    getPokemonInfo(num);\r\n  }, []);\r\n\r\n  async function getPokemonInfo(num) {\r\n    let { data } = await axios.get(props.info);\r\n\r\n    data.num = num;\r\n\r\n    setPokemonData(data);\r\n  }\r\n\r\n  function handleUserClick() {\r\n    localStorage.setItem('@react-pokedex/pokemon', JSON.stringify(pokemonData));\r\n\r\n    props.history.push('/pokemon/');\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pokeCard\"\r\n      style={{ backgroundColor: colors[pokemonData.types[0].type.name] }}\r\n      onClick={handleUserClick}\r\n    >\r\n      <header>\r\n        <strong>{props.name}</strong>\r\n        <p>#{pokeNum}</p>\r\n      </header>\r\n      <div className=\"body\">\r\n        <div className=\"typesContainer\">\r\n          {pokemonData.types.map(type => <span key={type.type.name} className=\"pokeType\">{type.type.name}</span>)}\r\n        </div>\r\n        <div className=\"imageContainer\">\r\n          <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${pokeNum}.png`} alt=\"Pokemon\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PokeCard);","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport PokeCard from '../../components/PokeCard';\r\n\r\nimport './styles.css';\r\n\r\nexport default function PokeList({ name, defaultNextPage }) {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [nextPage, setNextPage] = useState(defaultNextPage);\r\n\r\n  // Get info from pokeapi\r\n  useEffect(() => {\r\n    getPokeInfo();\r\n  }, []);\r\n\r\n  const observer = useRef()\r\n  const bottomRef = useCallback(node => {\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && nextPage !== null) {\r\n        handleLoadMore()\r\n      }\r\n    })\r\n    if (node) observer.current.observe(node)\r\n  }, [nextPage]);\r\n\r\n  async function getPokeInfo() {\r\n    const { data } = await axios.get(nextPage);\r\n\r\n    console.log(data)\r\n\r\n    const { next = null, results, pokemon_entries } = data;\r\n\r\n    if (results) {\r\n      setPokemons([...pokemons, ...results]);\r\n    } else if (pokemon_entries) {\r\n      setPokemons([...pokemons, ...pokemon_entries.map(pokemon => ({\r\n        name: pokemon.pokemon_species.name,\r\n        url: pokemon.pokemon_species.url.split('-species').join('')\r\n      }))]);\r\n    }\r\n\r\n    setNextPage(next);\r\n  }\r\n\r\n  function handleLoadMore() {\r\n    getPokeInfo();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"pokeList\">\r\n        {pokemons.map((pokemon, index) => (\r\n          <PokeCard\r\n            key={index}\r\n            index={index + 1}\r\n            id={pokemon.url.split('/')[6]}\r\n            name={pokemon.name}\r\n            info={pokemon.url}\r\n          />\r\n        ))}\r\n      </div>\r\n      <footer id=\"pokeFooter\">\r\n        {nextPage !== null ? (\r\n          <button ref={bottomRef} onClick={handleLoadMore}>More!</button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// Components\r\nimport MainMenu from '../../components/Menu';\r\nimport PokeList from '../../components/PokeList';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Pokedex({ match }) {\r\n  const [api, setApi] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    document.querySelector(\"meta[name='theme-color']\").setAttribute(\"content\", \"#000\");\r\n\r\n    if (match.params.name === \"pokedex\") {\r\n      setApi(\"https://pokeapi.co/api/v2/pokemon/?limit=60&offset=0\")\r\n    } else {\r\n      setApi(`https://pokeapi.co/api/v2/pokedex/${match.params.name}/`)\r\n    }\r\n  }, [match]);\r\n\r\n  return (\r\n    <div id=\"Pokedex\">\r\n      <MainMenu href=\"/\" />\r\n      <h1 className=\"title\">{match.params.name.split('-').join(' ')}</h1>\r\n      {api !== \"\" && <PokeList name={match.params.name} defaultNextPage={api} />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Components\r\nimport MainMenu from '../../components/Menu';\r\n\r\nimport colors from '../../config/colors';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Pokemon() {\r\n  const [info, setInfo] = useState({\r\n    types: [{\r\n      type: {\r\n        name: \"\"\r\n      }\r\n    }],\r\n    egg_groups: [],\r\n    abilities: [],\r\n    stats: [],\r\n  });\r\n  const [tabs, setTabs] = useState({\r\n    about: {},\r\n    stats: { display: \"none\" },\r\n    evolution: { display: \"none\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    let pokemonData = JSON.parse(localStorage.getItem('@react-pokedex/pokemon'));\r\n\r\n    getPokemonSpecies(pokemonData);\r\n  }, []);\r\n\r\n  async function getPokemonSpecies(pokemonData) {\r\n    let response = await axios.get(pokemonData.species.url);\r\n\r\n    pokemonData.specie = response.data.genera[2].genus.split(\" Pokémon\")[0];\r\n    \r\n    let abilities = [];\r\n\r\n    pokemonData.abilities.map(ability => {\r\n      abilities.push(ability.ability.name);\r\n    });\r\n\r\n    pokemonData.abilities = abilities;\r\n    \r\n    let egg_groups = [];\r\n\r\n    response.data.egg_groups.map(egg => {\r\n      egg_groups.push(egg.name);\r\n    });\r\n\r\n    pokemonData.egg_groups = egg_groups;\r\n    \r\n    setInfo(pokemonData);\r\n\r\n    document.querySelector(\"meta[name='theme-color']\").setAttribute(\"content\", colors[pokemonData.types[0].type.name]);\r\n  }\r\n\r\n  function getActiveTab(tab) {\r\n    if(tabs[tab].display === undefined) {\r\n      return { borderBottom: \"2px solid black\", color: \"black\", fontSize: \"16px\" };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  function handleTab(tab) {\r\n    let tabStyles = {\r\n      about: { display: \"none\" },\r\n      stats: { display: \"none\" },\r\n      evolution: { display: \"none\" },\r\n    };\r\n\r\n    tabStyles[tab] = {};\r\n\r\n    setTabs(tabStyles);\r\n  }\r\n\r\n  return (\r\n    <div id=\"Pokemon\" style={{ backgroundColor: colors[info.types[0].type.name]}}>\r\n      <MainMenu href=\"/pokedex/\" white />\r\n      <h1 className=\"title\">{info.name}</h1>\r\n      <div id=\"types\">\r\n        {info.types.map(type => <span key={type.type.name} className=\"pokeType\">{type.type.name}</span>)}\r\n      </div>\r\n      <div id=\"pokemonImage\">\r\n        <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${info.num}.png`} alt=\"Pokemon\"/>\r\n      </div>\r\n      <div id=\"pokemonInfo\">\r\n        <div id=\"tabs\">\r\n          <button className=\"item\" style={getActiveTab(\"about\")} onClick={() => handleTab(\"about\")}>About</button>\r\n          <button className=\"item\" style={getActiveTab(\"stats\")} onClick={() => handleTab(\"stats\")}>Base Stats</button>\r\n          <button className=\"item\" style={getActiveTab(\"evolution\")} onClick={() => handleTab(\"evolution\")}>Evolution</button>\r\n        </div>\r\n        <div className=\"tabBody\" style={tabs.about}>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Species</td>\r\n                <td>{info.specie}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Height</td>\r\n                <td>{info.height}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Weight</td>\r\n                <td>{info.weight}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Abilities</td>\r\n                <td style={{ textTransform: \"capitalize\" }}>{info.abilities.join(', ')}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <h4>Breeding</h4>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Egg Groups</td>\r\n                <td style={{ textTransform: \"capitalize\" }}>{info.egg_groups.join(', ')}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"tabBody\" style={tabs.stats}>\r\n          <table>\r\n            <tbody>\r\n              {info.stats.map(stat => (\r\n                <tr key={stat.stat.name}>\r\n                  <td style={{ textTransform: \"capitalize\" }}>{stat.stat.name.split(\"-\").join(\" \")}</td>\r\n                  <td>{stat.base_stat}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"tabBody\" style={tabs.evolution}>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport logo from '../../assets/logo.svg';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    document.querySelector(\"meta[name='theme-color']\").setAttribute(\"content\", \"#000\");\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"NotFound\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1>\r\n          Error 404: Not Found!\r\n        </h1>\r\n        <p>\r\n          This page doesn't exist!\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"/\"\r\n        >\r\n          Go back to home\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { Transition, TransitionGroup } from 'react-transition-group';\r\nimport { play, exit } from './timelines'\r\n\r\n// Pages\r\nimport Index from './pages/Index';\r\nimport Pokedex from './pages/Pokedex';\r\nimport Pokemon from './pages/Pokemon';\r\nimport NotFound from './pages/NotFound';\r\n\r\n// Export Routes\r\nexport default function Routes() {\r\n  return(\r\n    <BrowserRouter basename=\"/reactPokedex\">\r\n      <Route render={({ location }) => {\r\n        const { pathname, key } = location;\r\n\r\n        return (\r\n          <TransitionGroup component={null}>\r\n            <Transition\r\n              key={key}\r\n              appear={true}\r\n              onEnter={(node, appears) => play(pathname, node, appears)}\r\n              onExit={(node, appears) => exit(node, appears)}\r\n              timeout={{enter: 750, exit: 150}}\r\n            >\r\n              <Switch location={location}>\r\n                <Route path=\"/\" exact component={Index} />\r\n                <Route path=\"/:name\" component={Pokedex} />\r\n                <Route path=\"/pokemon\" component={Pokemon} />\r\n                <Route path=\"*\" component={NotFound} />\r\n              </Switch>\r\n            </Transition>\r\n          </TransitionGroup>\r\n        )\r\n      }}/>\r\n    </BrowserRouter>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\n\r\n// Website Routes\r\nimport Routes from './routes';\r\n\r\nimport pokeballIcon from './assets/pokeball.jpg';\r\n\r\n// Component\r\nexport default function App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <img id=\"pokeballIcon\" src={pokeballIcon} alt=\"Pokeball Icon\"/>\r\n      <Routes />\r\n    </div>\r\n  );\r\n}"],"sourceRoot":""}