{"version":3,"sources":["envConfig.js","services/api.js","components/Header/index.js","pages/PokemonList/index.js","pages/PokemonInfo/index.js","pages/Pokedex/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","serverPath","api","Axios","create","baseURL","Header","document","querySelector","onclick","window","history","back","react_default","a","createElement","href","className","KeyboardArrowLeft_esm","concat","envConfig","Home_esm","Component","PokemonList","state","pokemons","show","filter","loadPokemons","_callee2","response","poke","regenerator_default","wrap","_context2","prev","next","_this","length","get","props","match","params","pokedexName","sent","data","pokemon_entries","forEach","_ref2","Object","asyncToGenerator","mark","_callee","pokemon","entry_number","name","_response$data","front_default","id","_context","pokemon_species","sprites","push","poke_id","img","setState","sort","dynamicSort","stop","_x","apply","this","arguments","property","sortOrder","substr","b","pokemonName","getElementById","value","toLowerCase","indexOf","Fragment","Header_Header","onChange","placeholder","Search_esm","map","key","src","alt","PokemonInfo","pokemonInfo","stats","types","capitalize","text","words","split","word","charAt","toUpperCase","slice","join","loadPokemonInfo","height","pokemonTypes","type","_this2","element","stat","base_stat","Pokedex","pokedexList","allPokedex","results","pokedexReturn","pokedex","Routes","react_router_dom","basename","process","react_router","path","exact","component","App","routes","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","URL","origin","addEventListener","fetch","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a5bae877.chunk.js","sourcesContent":["module.exports = {\r\n    serverPath: '/reactPokedex'\r\n}","import Axios from 'axios';\r\n\r\nconst api = Axios.create({\r\n    baseURL: ''\r\n});\r\n\r\nexport default api;","import React, { Component } from 'react';\r\nimport {KeyboardArrowLeft} from 'styled-icons/material/KeyboardArrowLeft';\r\nimport {Home} from 'styled-icons/material/Home';\r\n\r\n// Style\r\nimport './styles.css';\r\n\r\n/* Config */\r\nimport envConfig from '../../envConfig.js';\r\n\r\nexport default class Header extends Component{\r\n\r\n    componentDidMount(){\r\n        document.querySelector(\".returnButton\").onclick = () => {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header>\r\n                <a href=\"#!\" className=\"returnButton\">\r\n                    <KeyboardArrowLeft className=\"icon\" />\r\n                </a>\r\n                <span>Pok√©dex</span>\r\n                <a href={`${envConfig.serverPath}`}>\r\n                    <Home className=\"icon\" />\r\n                </a>\r\n            </header>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Search } from 'styled-icons/material/Search';\r\n\r\n/* API Import */\r\nimport api from '../../services/api';\r\n\r\n/* Components */\r\nimport Header from '../../components/Header';\r\n\r\n/* Style */\r\nimport './styles.css';\r\n\r\n/* Config */\r\nimport envConfig from '../../envConfig.js';\r\n\r\nclass PokemonList extends Component {\r\n\tstate = {\r\n\t\tpokemons: [],\r\n\t\tshow: [],\r\n\t\tfilter: \"\"\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadPokemons();\r\n\t}\r\n\r\n\tloadPokemons = async () => {\r\n\t\tif (this.state.pokemons.length === 0) {\r\n\t\t\tlet response = [];\r\n\t\t\tlet poke = [];\r\n\r\n\t\t\t//${this.props.match.params.pokedexName}\r\n\t\t\tresponse = await api.get(`https://pokeapi.co/api/v2/pokedex/${this.props.match.params.pokedexName}`);\r\n\r\n\t\t\tconst { data: { pokemon_entries } } = response;\r\n\r\n\t\t\t// Get more information about each pokemon\r\n\t\t\tpokemon_entries.forEach(async (pokemon) => {\r\n\t\t\t\tconst { entry_number, pokemon_species: { name } } = pokemon;\r\n\r\n\t\t\t\tconst response = await api.get(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n\r\n\t\t\t\tconst { sprites: { front_default }, id } = response.data;\r\n\r\n\t\t\t\tpoke.push({\r\n\t\t\t\t\tid: entry_number,\r\n\t\t\t\t\tpoke_id: id,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\timg: front_default\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tpokemons: poke.sort(this.dynamicSort(\"id\")),\r\n\t\t\t\t\tshow: poke.sort(this.dynamicSort(\"id\")),\r\n\t\t\t\t\tfilter: \"\"\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdynamicSort = (property) => {\r\n\t\tvar sortOrder = 1;\r\n\t\tif (property[0] === \"-\") {\r\n\t\t\tsortOrder = -1;\r\n\t\t\tproperty = property.substr(1);\r\n\t\t}\r\n\t\treturn function (a, b) {\r\n\t\t\t/* next line works with strings and numbers, \r\n\t\t\t\t* and you may want to customize it to your needs\r\n\t\t\t\t*/\r\n\t\t\tvar result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\r\n\t\t\treturn result * sortOrder;\r\n\t\t}\r\n\t}\r\n\r\n\tfilter = () => {\r\n\t\tvar pokemonName = document.getElementById(\"pokemonName\").value.toLowerCase();\r\n\r\n\t\tthis.setState({\r\n\t\t\tpokemons: this.state.pokemons,\r\n\t\t\tshow: this.state.pokemons.filter((pokemon) => {\r\n\t\t\t\treturn pokemon.name.indexOf(pokemonName) !== -1;\r\n\t\t\t}),\r\n\t\t\tfilter: pokemonName\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<div className=\"pokeContainer\">\r\n\t\t\t\t\t<div className=\"pokeForm\">\r\n\t\t\t\t\t\t<input id=\"pokemonName\" onChange={this.filter} placeholder=\"Pokemon Name...\" />\r\n\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t<Search className=\"icon\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{this.state.show.map(pokemon => (\r\n\t\t\t\t\t\t<a href={`${envConfig.serverPath}/pokemon/${pokemon.poke_id}`} key={pokemon.id} className=\"pokeItem\">\r\n\t\t\t\t\t\t\t<img src={pokemon.img} alt={pokemon.name} />\r\n\t\t\t\t\t\t\t<p>{pokemon.name}</p>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PokemonList;\r\n","import React, { Component } from 'react';\r\n\r\n/* Components */\r\nimport Header from '../../components/Header';\r\n\r\n/* API */\r\nimport api from '../../services/api';\r\n\r\n/* Style */\r\nimport './styles.css';\r\n\r\nexport default class PokemonInfo extends Component{\r\n    state = {\r\n        pokemonInfo: {\r\n            id: \"\",\r\n            name: \"\",\r\n            front_default: \"\",\r\n            stats: [],\r\n            types: [],\r\n        }\r\n    }\r\n\r\n    capitalize = (text) => {\r\n        if(text.indexOf('-') !== -1){\r\n            var words = text.split('-');\r\n            var capitalize = [];\r\n            words.forEach(word => {\r\n                capitalize.push(word.charAt(0).toUpperCase() + word.slice(1));\r\n            });\r\n            text = capitalize.join(\" \");\r\n        }else{\r\n            text = text.charAt(0).toUpperCase() + text.slice(1);\r\n        }\r\n        return text;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadPokemonInfo();\r\n    }\r\n\r\n    loadPokemonInfo = async () => {\r\n        const response = await api.get(`https://pokeapi.co/api/v2/pokemon/${this.props.match.params.id}/`);\r\n\r\n        const { id, name, height, sprites: { front_default }, stats, types } = response.data;\r\n\r\n        var pokemonTypes = [];\r\n\r\n        types.forEach(type => {\r\n            pokemonTypes.push(this.capitalize(type.type.name));\r\n        });\r\n\r\n        this.setState({\r\n            pokemonInfo: {\r\n                id,\r\n                name,\r\n                height: height / 10,\r\n                front_default,\r\n                stats: stats,\r\n                types: pokemonTypes\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <Header />\r\n                <div id=\"pokemonInfo\">\r\n                    <div className=\"basicInfo\">\r\n                        <img src={this.state.pokemonInfo.front_default} alt={this.state.pokemonInfo.name} />\r\n                        <p>{this.state.pokemonInfo.name} - #{this.state.pokemonInfo.id}</p>\r\n                        {this.state.pokemonInfo.types.map((type) => (\r\n                            <span key={type} className={type.toLowerCase()}>{type}</span>\r\n                        ))}\r\n                    </div>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><b>Height</b></td>\r\n                                <td className=\"left-align\">{this.state.pokemonInfo.height} m</td>\r\n                            </tr>\r\n                            {this.state.pokemonInfo.stats.map((element) => (\r\n                                <tr key={element.stat.name}>\r\n                                    <td><b>{this.capitalize(element.stat.name)}</b></td>\r\n                                    <td className=\"left-align\">{element.base_stat}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\n/* Components */\r\nimport Header from '../../components/Header';\r\n\r\n/* API */\r\nimport api from '../../services/api';\r\n\r\n/* Styles */\r\nimport './styles.css';\r\n\r\n/* Config */\r\nimport envConfig from '../../envConfig.js';\r\n\r\nexport default class Pokedex extends Component{\r\n    state = {\r\n        pokedexList: []\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const response = await api.get('https://pokeapi.co/api/v2/pokedex/');\r\n        const allPokedex = response.data.results;\r\n        const pokedexReturn = [];\r\n\r\n        allPokedex.forEach(pokedex => {\r\n            pokedexReturn.push({\r\n                key: pokedex.name,\r\n                name: this.capitalize(pokedex.name)\r\n            });\r\n\r\n            this.setState({\r\n                pokedexList: pokedexReturn\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    capitalize = (text) => {\r\n        if(text.indexOf('-') !== -1){\r\n            var words = text.split('-');\r\n            var capitalize = [];\r\n            words.forEach(word => {\r\n                capitalize.push(word.charAt(0).toUpperCase() + word.slice(1));\r\n            });\r\n            text = capitalize.join(\" \");\r\n        }else{\r\n            text = text.charAt(0).toUpperCase() + text.slice(1);\r\n        }\r\n        return text;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <Header />\r\n                <div className=\"pokedexList\">\r\n                    <div className=\"title\">\r\n                        <h1>Select a Pok√©dex:</h1>\r\n                    </div>\r\n                    {this.state.pokedexList.map(pokedex => (\r\n                        <div key={pokedex.key} className=\"link\">\r\n                            <a href={`${envConfig.serverPath}/pokemons/${pokedex.key}`}>{pokedex.name}</a>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\n/* Page */\r\nimport PokemonList from './pages/PokemonList';\r\nimport PokemonInfo from './pages/PokemonInfo';\r\nimport Pokedex from './pages/Pokedex';\r\n\r\n/* Config */\r\nimport envConfig from './envConfig.js';\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n            <Route path={`${envConfig.serverPath}/`} exact component={Pokedex}></Route>\r\n            <Route path={`${envConfig.serverPath}/pokemons/:pokedexName`} exact component={PokemonList}></Route>\r\n            <Route path={`${envConfig.serverPath}/pokemon/:id`} exact component={PokemonInfo}></Route>\r\n            <Route component={() => (<div>404 Not found </div>)} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}